{
  "swagger": "2.0",
  "info": {
    "title": "üèãÔ∏è‚Äç‚ôÇÔ∏è Academia MongoDB API",
    "description": "Sistema Completo de Gerenciamento de Academia\n\nTUTORIAL PR√ÅTICO:\n\n1. AUTENTICA√á√ÉO (OBRIGAT√ìRIO):\n   - Fa√ßa Login: POST /api/auth/login\n   - Credenciais: {\"email\": \"admin@academia.com\", \"password\": \"admin123\"}\n   - Copie o token da resposta\n   - Clique em \"Authorize\" (üîí) no topo da p√°gina\n   - Cole: Bearer SEU_TOKEN_AQUI\n   - Clique \"Authorize\" ‚Üí \"Close\"\n\n2. TESTANDO AS ROTAS:\n   - Alunos: GET /api/alunos/ (listar) | POST /api/alunos/ (criar)\n   - Professores: GET /api/professores/ | POST /api/professores/\n   - Treinos: GET /api/treinos/ | POST /api/treinos/\n   - Consultas Avan√ßadas: GET /api/alunos/consulta/avancada\n\nFUNCIONALIDADES:\n‚úÖ CRUD completo (Alunos, Professores, Treinos, Planos)\n‚úÖ Autentica√ß√£o JWT (tokens v√°lidos por 7 dias)\n‚úÖ Operadores MongoDB ($gt, $and, $or, $in, $gte, $lt)\n‚úÖ Valida√ß√£o robusta com express-validator\n‚úÖ Controle de acesso por middleware\n\n\nReposit√≥rio: https://github.com/Adejarbas/academia-mongoDB",
    "version": "1.0.0",
    "contact": {
      "name": "Daniel Adejarbas",
      "url": "https://github.com/Adejarbas/academia-mongoDB",
      "email": "adejarbas@github.com"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Insira o token JWT no formato: Bearer {seu-token}"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "summary": "Fazer Login",
        "description": "Autentica usu√°rio e retorna token JWT v√°lido por 7 dias",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Registrar Usu√°rio",
        "description": "Cria novo usu√°rio no sistema com senha criptografada",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "role": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/alunos/consulta/avancada": {
      "get": {
        "summary": "Consulta Avan√ßada de Alunos",
        "description": "Busca alunos com idade > X e peso > Y usando operadores $gt e $and",
        "parameters": [
          {
            "name": "idade",
            "in": "query",
            "description": "Idade m√≠nima (maior que)",
            "required": false,
            "type": "integer",
            "example": 20
          },
          {
            "name": "peso",
            "in": "query",
            "description": "Peso m√≠nimo (maior que)",
            "required": false,
            "type": "number",
            "example": 70
          }
        ],
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "filtros": {
                  "type": "object",
                  "properties": {
                    "idade": {
                      "type": "number",
                      "example": 20
                    },
                    "peso": {
                      "type": "number",
                      "example": 70
                    }
                  }
                },
                "total": {
                  "type": "number",
                  "example": 5
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Aluno"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/alunos/consulta/complexa": {
      "get": {
        "summary": "Consulta Complexa de Alunos",
        "description": "Busca alunos usando m√∫ltiplos operadores: $or, $and, $gte, $lt, $in",
        "parameters": [
          {
            "name": "pesoMin",
            "in": "query",
            "description": "Peso m√≠nimo",
            "required": false,
            "type": "number"
          },
          {
            "name": "pesoMax",
            "in": "query",
            "description": "Peso m√°ximo",
            "required": false,
            "type": "number"
          },
          {
            "name": "idades",
            "in": "query",
            "description": "Idades espec√≠ficas (separadas por v√≠rgula)",
            "required": false,
            "type": "string",
            "example": "18,25,30"
          },
          {
            "name": "nomes",
            "in": "query",
            "description": "Nomes para buscar (separados por v√≠rgula)",
            "required": false,
            "type": "string",
            "example": "Jo√£o,Maria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/alunos/": {
      "get": {
        "summary": "Listar Alunos",
        "description": "Lista todos os alunos do usu√°rio logado (ou todos se for admin)",
        "responses": {
          "200": {
            "description": "Lista de alunos",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Aluno"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Criar Aluno",
        "description": "Cria um novo aluno associado ao usu√°rio logado",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Dados do aluno",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Aluno"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Aluno criado com sucesso",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "400": {
            "description": "Dados inv√°lidos",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/alunos/{id}": {
      "get": {
        "summary": "Buscar Aluno por ID",
        "description": "Retorna um aluno espec√≠fico pelo ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do aluno"
          }
        ],
        "responses": {
          "200": {
            "description": "Aluno encontrado",
            "schema": {
              "$ref": "#/definitions/Aluno"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Aluno n√£o encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Atualizar Aluno",
        "description": "Atualiza dados de um aluno existente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do aluno"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados atualizados do aluno",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Aluno"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aluno atualizado com sucesso",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Deletar Aluno",
        "description": "Remove um aluno do sistema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do aluno"
          }
        ],
        "responses": {
          "200": {
            "description": "Aluno removido com sucesso",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Aluno n√£o encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/professores/": {
      "get": {
        "summary": "Listar Professores",
        "description": "Lista todos os professores do usu√°rio logado",
        "responses": {
          "200": {
            "description": "Lista de professores",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Professor"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Criar Professor",
        "description": "Cadastra um novo professor no sistema",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Dados do professor",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Professor"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Professor criado com sucesso",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/professores/{id}": {
      "get": {
        "summary": "Buscar Professor por ID",
        "description": "Retorna um professor espec√≠fico pelo ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do professor"
          }
        ],
        "responses": {
          "200": {
            "description": "Professor encontrado",
            "schema": {
              "$ref": "#/definitions/Professor"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Atualizar Professor",
        "description": "Atualiza dados de um professor existente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do professor"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados atualizados do professor",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Professor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Deletar Professor",
        "description": "Remove um professor do sistema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do professor"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/treinos/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/treinos/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/planos/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/planos/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/plano-alunos/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/plano-alunos/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  }
}